#!/usr/local/bin/node
const fs = require('fs')
const parseArgs = require('minimist')
const { Gadget } = require('..')

const opts = parseArgs(process.argv.slice(2))


var map = {
	help,
	create,
	remove,
	enable,
	disable
}
Object.keys(map).forEach(k=>map[k[0]] = map[k])

if(process.getuid()){
	console.log('Root privileges needed, are you missing sudo?')
	if(opts.h || opts.help) help()
	process.exit()
}

console.log(opts)
var ran = false
for(var k in opts){
	let func = map[k]
	if(func) func(opts[k],...opts._)
	ran |= !!func
}
if(!ran) help()

function help(){
	console.log(`
        Gadget Helper
        Usage: gadget <options> args

        libcomposite module MUST be loaded.
        	sudo modprobe libcomposite

        Options:
            -h --help               this help 
            -c --create jsonfile    create gadget
            -r --remove id          remove gadget
            -e --enable id <udc>    enable gadget
            -d --disable id         disable gadget

        Types:
            jsonfile    file containing gadget config
            id          id of gadget
            udc         name of udc device (Automatic if omitted)
	`.replace(/^        /gm,''))
}

function create(file){
	fs.readFile(file,{},(err,data)=>{
		if(err) return console.log(err.message)
		var json = JSON.parse(data.toString())
		Gadget.create(json,(err)=>{
			console.log('Created')
		})
	})
}

function remove(id){
	Gadget.remove(id,(err)=>{
		console.log('Destroyed')
	})
}

function enable(id,udc){
	Gadget.enable(id,udc,(err)=>{
		console.log('Enabled')
	})
}

function disable(id){
	Gadget.disable(id,(err)=>{
		console.log('Disabled')
	})
}